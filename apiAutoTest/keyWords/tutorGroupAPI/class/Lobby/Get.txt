*** Keywords ***
Get
    [Arguments]    ${LobbyBrand}=    ${PeriodMinutes}=    ${StartTimeBegin}=    ${StartTimeEnd}=    ${TutorBrand}=    ${NotNullAndNotEmptyConditions}=
    ${uri}    Set Variable    /class/lobby/Data/Profile/Get
    ${params}    run keyword if    ${LobbyBrand}==[]    Set Variable    Token=${Token}&Query={PeriodMinutes:${PeriodMinutes},StartTimeBegin:"${StartTimeBegin}",StartTimeEnd:"${StartTimeEnd}",TutorBrand:"${TutorBrand}",NotNullAndNotEmptyConditions:["${NotNullAndNotEmptyConditions}"]}
    ...    ELSE    Set Variable    Token=${Token}&Query={LobbyBrand:${LobbyBrand},PeriodMinutes:${PeriodMinutes},StartTimeBegin:"${StartTimeBegin}",StartTimeEnd:"${StartTimeEnd}",TutorBrand:"${TutorBrand}",NotNullAndNotEmptyConditions:["${NotNullAndNotEmptyConditions}"]}
    ${resp}    get request    api    ${uri}    \    ${params}
    Should Be Equal As Strings    ${resp.status_code}    200

GetSn
    [Arguments]    ${LobbySn}=
    ${uri}    Set Variable    /class/lobby/Data/Profile/Get
    ${params}    Set Variable    Token=${Token}&Query={Sn:${LobbySn}}
    ${resp}    get request    api    ${uri}    \    ${params}
    Should Be Equal As Strings    ${resp.status_code}    200

GetByLobbyBrand_Template
    [Arguments]    ${LobbyBrand}    ${Days}    ${SessionPeriod}    ${TutorBrand}=
    log    以LobbyBrand查询从现在时段到固定时间内的讲堂课程(大人，共同)
    ${StartTimeBegin}    get time
    ${StartTimeEnd}    Add Time To Date    ${StartTimeBegin}    ${Days} days
    Get    [${LobbyBrand}]    [${SessionPeriod}]    ${StartTimeBegin}    ${StartTimeEnd}    ${TutorBrand}
    assertEqualValueByJson    Success    true
    assertApiResponses    Result,all,LobbyBrand    =    ${LobbyBrand}
    ${api_rsponse}    get api response
    ${api_rsponse}    To Json    ${api_rsponse}
    ${Result}    Get From Dictionary    ${api_rsponse}    Result
    ${ApiNums}    Get Length    ${Result}
    ${ApiSn_list}    get api response    Result,all,Sn
    ${ApiLevel_list}    get api response    Result,all,Level
    ${ApiLobbyBrand_list}    get api response    Result,all,LobbyBrand
    #检查数据库
    ${returnData}    queryDataSpecial    sn,BrandType    muchnewdb    lobby_session    valid=1 and BrandType IN (${LobbyBrand}) and DATEADD(MINUTE, SessionStartMinute, DATEADD(HOUR, session_time, session_date)) >=convert(datetime,'${StartTimeBegin}') and DATEADD(MINUTE, SessionStartMinute, DATEADD(HOUR, session_time, session_date)) <=convert(datetime,'${StartTimeEnd}') and SessionPeriod IN (${SessionPeriod}) order by sn asc
    ${DbSn_list}    Get Db Datas    all,0
    ${DbBrandType_list}    Get Db Datas    all,1
    should be true    ${ApiSn_list}==${DbSn_list}
    should be true    ${ApiLobbyBrand_list}==${DbBrandType_list}
    ${DbNums}    Get Length    ${returnData}
    should be true    ${ApiNums}==${DbNums}
    : FOR    ${i}    IN RANGE    ${ApiNums}
    \    ${ApiSn}    Set Variable    ${Result[${i}]['Sn']}
    \    ${ApiLevel}    Set Variable    ${Result[${i}]['Level']}
    \    ${ApiStartTime}    Set Variable    ${Result[${i}]['StartTime']}
    \    ${ApiFinishTime}    Set Variable    ${Result[${i}]['FinishTime']}
    \    ${ApiPeriodMinutes}    Set Variable    ${Result[${i}]['PeriodMinutes']}
    \    ${StartTimeEnd}    Add Time To Date    ${ApiStartTime}    00:${SessionPeriod}:00
    \    run keyword if    ${ApiPeriodMinutes}==${SessionPeriod}    should be true    '${ApiFinishTime}.000'=='${StartTimeEnd}'
    \    #should be true    '${ApiFinishTime}.000'=='${StartTimeEnd}'
    \    ${TopicZhTw}    Set Variable    ${Result[${i}]['Topic']['ZhTw']}
    \    ${TopicEnUs}    Set Variable    ${Result[${i}]['Topic']['EnUs']}
    \    ${TopicZhCn}    Set Variable    ${Result[${i}]['Topic']['ZhCn']}
    \    ${TopicJa}    Set Variable    ${Result[${i}]['Topic']['Ja']}
    \    queryDataSpecial    topic,topic_cn,topic_jp,lev    muchnewdb    lobby_session    Sn=${ApiSn} AND \ DATEADD(MINUTE, SessionStartMinute, DATEADD(HOUR, session_time, session_date))=convert(datetime,'${ApiStartTime}')
    \    ${DbLev_list}    Get Db Datas    0,3
    \    ${Dbtopic_list}    Get Db Datas    0,0    <br>
    \    ${Dbtopic}    strip String    ${Dbtopic_list[0]}
    \    ${DbtopicEnUs_list}    Get Db Datas    0,0    <br>    1
    \    ${DbtopicEnUs}    strip String    ${DbtopicEnUs_list[0]}
    \    ${topic_cnList}    Get Db Datas    0,1    <br>
    \    ${Dbtopic_cn}    strip String    ${topic_cnList[0]}
    \    ${topic_jpList}    Get Db Datas    0,2    <br>
    \    ${Dbtopic_jp}    strip String    ${topic_jpList[0]}
    \    should be equal as strings    ${TopicZhTw}    ${Dbtopic}
    \    should be equal as strings    ${TopicEnUs}    ${DbtopicEnUs}
    \    should be equal as strings    ${TopicZhCn}    ${Dbtopic_cn}
    \    should be equal as strings    ${TopicJa}    ${Dbtopic_jp}
    \    ${DbLev}    Remove Data Sign    ${DbLev_list[0]}    ,
    \    should be true    ${ApiLevel}==${DbLev}

GetByTutorBrand_Template
    [Arguments]    ${SessionPeriod}    ${TutorBrand}    ${Days}
    ${StartTimeBegin}    get time
    ${StartTimeEnd}    Add Time To Date    ${StartTimeBegin}    ${Days} days
    #${SessionPeriod}    Set Variable    45
    #${TutorBrand}    Set Variable    vipabc
    Get    []    [${SessionPeriod}]    ${StartTimeBegin}    ${StartTimeEnd}    ${TutorBrand}
    assertEqualValueByJson    Success    true
    assertApiResponses    Result,all,LobbyBrand    IN    [1,3]

GetLobbysn
    [Arguments]    ${LobbyBrand}=    ${SessionPeriod}=    ${Days}=    ${Needs}=Sn    ${Index}=11    ${NotNullAndNotEmptyConditions}=
    #获取教材编号
    ${StartTimeBegin}    get time
    ${StartTimeBegin}    Add Time To Date    ${StartTimeBegin}    6 m
    ${StartTimeEnd}    Add Time To Date    ${StartTimeBegin}    ${Days} days
    run keyword if    ${Days}<0    Get    [${LobbyBrand}]    [${SessionPeriod}]    ${StartTimeEnd}    ${StartTimeBegin}
    ...    \    ${NotNullAndNotEmptyConditions}
    ...    ELSE    Get    [${LobbyBrand}]    [${SessionPeriod}]    ${StartTimeBegin}    ${StartTimeEnd}
    ...    \    ${NotNullAndNotEmptyConditions}
    ${ApiSn_list}    get api response    Result,all,${Needs}
    ${Nums}    get length    ${ApiSn_list}
    ${returnData}    run keyword if    ${Nums}<1    Set Variable    0
    ...    ELSE    Set Variable    ${ApiSn_list[${Index}]}
    #${returnData}    Set Variable    ${ApiSn_list[${Index}]}
    [Return]    ${returnData}
